{"version":3,"sources":["reportWebVitals.js","redux/types.js","redux/actions.js","components/BoardComponents/Menu.js","components/BoardComponents/Answers.js","components/BoardComponents/Question.js","components/GameOver.js","components/Board.js","components/Main.js","components/Error.js","App.js","routes.js","redux/dataReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_QUESTIONS","INCREMENT_ITERATOR","GAME_OVER","RESULT","GET_CONFIG","setIncrement","data","type","payload","gameOver","result","Menu","price","useEffect","domElement","document","querySelectorAll","node","innerText","String","classList","add","remove","fallElement","item","Number","map","el","className","id","reverse","Answers","props","true","onClick","callback","false","Question","GameOver","Grid","container","direction","justify","alignItems","xs","md","to","mapDispatchToProps","connect","state","arrAnswers","questions","i","iterator","end","length","question","title","answ","answers","len","filter","response","setQuestions","getConfig","arr","reduce","bank","includes","questionArr","push","value","filteredArr","Math","floor","random","filtered","Config","Error","App","routes","path","exact","component","MainPage","Main","Board","basename","initialState","Data","rootReducer","combineReducers","action","Object","assign","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","getElementById"],"mappings":"oydAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCPDQ,EAAgB,gBAChBC,EAAqB,qBACrBC,EAAY,YACZC,EAAS,SACTC,EAAa,aCEbC,EAAe,SAACC,GACzB,MAAO,CACHC,KAAMN,EACNO,QAASF,IAGJG,EAAW,SAAAH,GACpB,MAAO,CACHC,KAAML,EACNM,QAASF,IAGJI,EAAS,SAAAJ,GAClB,MAAO,CACHC,KAAMJ,EACNK,QAASF,I,QCaFK,G,MA/BF,SAAC,GAAmB,IAAlBL,EAAiB,EAAjBA,KAAMM,EAAW,EAAXA,MAuBjB,OArBAC,qBAAU,WACN,IADU,EACJC,EAAaC,SAASC,iBAAiB,kBADnC,cAEOF,GAFP,IAEV,2BAA6B,CAAC,IAArBG,EAAoB,QACtBA,EAAKC,YAAcC,OAAOP,KACzBK,EAAKG,UAAUC,IAAI,mBACnBJ,EAAKG,UAAUE,OAAO,mBALpB,8BAQV,IARU,EAQJC,EAAcR,SAASC,iBAAiB,oBARpC,cASOO,GATP,IASV,2BAA8B,CAAC,IAAtBC,EAAqB,QACvBC,OAAOD,EAAKN,WAAaN,IACxBY,EAAKJ,UAAUC,IAAI,qBACnBG,EAAKJ,UAAUE,OAAO,qBAZpB,kCAqBPhB,EAAKoB,KAAI,SAAAC,GACZ,OACI,qBAAiBC,UAAU,2BAA3B,SACKD,EAAGf,OADEe,EAAGE,OAIlBC,YCJQC,G,MAzBC,SAACC,GACb,OACI,8BACKA,EAAM1B,KAAKoB,KAAI,SAACC,GACb,OAAGA,EAAGM,KAEG,qBACGL,UAAU,UAEVM,QAAS,kBAAIF,EAAMG,SAASR,EAAGM,OAHlC,SAIEN,EAAGM,MAFGN,EAAGE,IAMZ,qBACID,UAAU,UAEVM,QAAS,kBAAIF,EAAMG,SAASR,EAAGS,QAHnC,SAIET,EAAGS,OAFIT,EAAGE,WCVrBQ,EAPE,SAACL,GACd,OACI,8BACI,6BAAKA,EAAM1B,U,QCyBRgC,G,MAzBE,SAAC,GAAa,IAAZ1B,EAAW,EAAXA,MACf,OACI,eAAC2B,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXf,UAAU,OALd,UAOI,qBAAKgB,GAAI,GAAIC,GAAI,EAAGjB,UAAU,SAC9B,sBAAKgB,GAAI,GAAIC,GAAI,EAAjB,UACI,mBAAGjB,UAAU,QAAb,0BACA,oBAAGA,UAAU,QAAb,cAAuBhB,EAAvB,aACA,qBAAKgC,GAAI,GAAT,SACI,cAAC,IAAD,CAAME,GAAG,IAAT,SACI,wBAAQlB,UAAU,WAAlB,SACI,mBAAGA,UAAU,UAAb,qCC+DtBmB,G,MAAqB,CACvB1C,eACAI,WACAC,WAEWsC,eAbS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAM3C,KAAK6C,UACvBC,EAAGH,EAAM3C,KAAK+C,SACdC,IAAKL,EAAM3C,KAAKG,SAChBG,MAAOqC,EAAM3C,KAAKI,UAQcqC,EAAzBC,EAhFD,SAAC,GAQR,IAPJE,EAOG,EAPHA,WACAE,EAMG,EANHA,EACA/C,EAKG,EALHA,aACAiD,EAIG,EAJHA,IACA7C,EAGG,EAHHA,SACAC,EAEG,EAFHA,OACAE,EACG,EADHA,MAGC,GAAIsC,EAAWK,OAAS,EAAG,CACvB,IAAM/B,EAAO,CACTgC,SAAUN,EAAWE,GAAGI,SAASC,MACjCC,KAAMR,EAAWE,GAAGI,SAASG,QAC7B/C,MAAOsC,EAAWE,GAAGxC,MACrBgD,IAAKV,EAAWK,OAChBtB,KAAMiB,EAAWE,GAAGI,SAASG,QAAQE,QAAO,SAAAlC,GAAE,OAAIA,EAAGM,QAAM,GAAGA,MAqBlE,OAAGqB,EAEK,cAAC,EAAD,CAAU1C,MAAOA,IAIjB,sBAAKgB,UAAU,QAAf,UACI,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACItB,KAAMkB,EAAKgC,aAGnB,qBAAK5B,UAAU,UAAf,SACI,cAAC,EAAD,CACItB,KAAMkB,EAAKkC,KACXvB,SAhCM,SAAC2B,GACpBA,IAAatC,EAAKS,MACjB5B,IAAe+C,GACf1C,EAAOc,EAAKZ,OAETwC,IAAM5B,EAAKoC,MACVlD,EAAOc,EAAKZ,OACZP,EAAa+C,EAAI,GACjB3C,GAAS,MAGbC,EAAOE,GACPH,GAAS,SAuBL,qBAAKmB,UAAU,OAAf,SACI,cAAC,EAAD,CACItB,KAAM4C,EACNtC,MAAOA,SAO/B,OAAO,2C,gBCRLmC,G,MAAqB,CACvBgB,aNjEwB,SAACzD,GAAD,MAAW,CACnCC,KAAMP,EACNQ,QAASF,IMgETI,SACAD,WACAuD,UN7CqB,SAAA1D,GACrB,MAAO,CACHC,KAAMH,EACNI,QAASF,IM2CbD,iBAGW2C,eAvBS,SAAAC,GACpB,IAAM3C,EAAO2C,EAAM3C,KAAKA,KAAKA,KAEvB2D,EAAM3D,EAAK4D,QAAO,SAACC,EAAM3C,GAAP,OAAgB2C,EAAKC,SAAS5C,EAAKZ,OAASuD,EAA5B,sBAAuCA,GAAvC,CAA6C3C,EAAKZ,UAAQ,IAK5FyD,EAAc,GAGpB,OAFAJ,EAAIvC,KAAI,SAAAC,GAAE,OAAI0C,EAAYC,KALT,SAACL,EAAKM,GACnB,IAAMC,EAAcP,EAAIJ,QAAO,SAAAlC,GAAE,OAAIA,EAAGf,QAAU2D,KAClD,OAAOC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWH,EAAYjB,SAG/BqB,CAAStE,EAAMqB,OAEvC,CACHrB,KAAM+D,KAW0BtB,EAAzBC,EAjEE,SAAC,GAOX,IANO1C,EAMR,EANQA,KACAyD,EAKR,EALQA,aACArD,EAIR,EAJQA,OACAD,EAGR,EAHQA,SACAuD,EAER,EAFQA,UACA3D,EACR,EADQA,aAEV,OACI,eAACkC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXf,UAAU,OALd,UAOI,qBAAKgB,GAAI,GAAIC,GAAI,EAAGjB,UAAU,QAG9B,sBAAKgB,GAAI,GAAIC,GAAI,EAAjB,UACI,sBAAMjB,UAAU,WAAhB,4CACA,qBAAKgB,GAAI,GAAT,SACI,cAAC,IAAD,CAAME,GAAG,SAAT,SACI,wBACIlB,UAAU,WACVM,QAAS,WACLxB,EAAO,MACPL,EAAa,GACbI,GAAS,GACTuD,EAAUa,GACVd,EAAazD,IAPrB,SAUI,mBAAGsB,UAAU,UAAb,kCCjCbkD,EAPD,WACV,OACI,8BACI,0CCUGC,MAXf,WACI,IAAMC,ECIF,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,EAAjC,SACI,cAACC,EAAD,MAEJ,cAAC,IAAD,CAAOJ,KAAK,SAASE,UAAWG,EAAhC,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOL,KAAK,YAAYE,UAAW7C,EAAnC,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAO2C,KAAK,IAAZ,SACI,cAAC,EAAD,SDdZ,OACI,cAAC,IAAD,CAAQM,SAAS,qBAAjB,SACI,cAAC,WAAD,UACKP,O,gBENXQ,EAAe,CACjBlF,KAAMmF,EACNtC,UAAW,GACXE,SAAU,EACV5C,UAAU,EACVC,OAAQ,GCLCgF,EAAcC,YAAgB,CACvCrF,KDOuB,WAAmC,IAAlC2C,EAAiC,uDAAzBuC,EAAcI,EAAW,uCACzD,OAAQA,EAAOrF,MACX,KAAKH,EACD,OAAO,2BAAI6C,GAAX,IAAkB3C,KAAMsF,EAAOpF,UACnC,KAAKR,EACD,OAAO6F,OAAOC,OAAO,GAAG7C,EAAO,CAC3BE,UAAWyC,EAAOpF,UAE1B,KAAKP,EACD,OAAO,2BAAIgD,GAAX,IAAkBI,SAAUuC,EAAOpF,UACvC,KAAKN,EACD,OAAO,2BAAI+C,GAAX,IAAkBxC,SAAUmF,EAAOpF,UACvC,KAAKL,EACD,OAAO,2BAAI8C,GAAX,IAAkBvC,OAAQkF,EAAOpF,UACrC,QAAS,OAAOyC,MEjBT8C,EALDC,YACVN,EACAO,YAAQC,OAAOC,8BAAgCD,OAAOC,iCCIpDC,G,MACF,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,EAAD,OAIRM,IAASC,OAAOF,EAAKrF,SAASwF,eAAe,SAK7ChH,M","file":"static/js/main.2ec24215.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SET_QUESTIONS = 'SET_QUESTIONS';\r\nexport const INCREMENT_ITERATOR = 'INCREMENT_ITERATOR';\r\nexport const GAME_OVER = 'GAME_OVER';\r\nexport const RESULT = 'RESULT';\r\nexport const GET_CONFIG = 'GET_CONFIG';","import {INCREMENT_ITERATOR, SET_QUESTIONS, GAME_OVER, RESULT, GET_CONFIG} from \"./types\";\r\n\r\nexport const setQuestions = (data) => ({\r\n    type: SET_QUESTIONS,\r\n    payload: data\r\n});\r\nexport const setIncrement = (data) => {\r\n    return {\r\n        type: INCREMENT_ITERATOR,\r\n        payload: data\r\n    }\r\n};\r\nexport const gameOver = data => {\r\n    return {\r\n        type: GAME_OVER,\r\n        payload: data\r\n    }\r\n};\r\nexport const result = data => {\r\n    return {\r\n        type: RESULT,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const getConfig = data => {\r\n    return {\r\n        type: GET_CONFIG,\r\n        payload: data\r\n    }\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport '../../styles/Menu.css';\r\n\r\nconst Menu = ({data, price}) => {\r\n\r\n    useEffect(()=>{\r\n        const domElement = document.querySelectorAll('.nextContainer');\r\n        for (let node of domElement) {\r\n            if(node.innerText === String(price)) {\r\n                node.classList.add('activeContainer');\r\n                node.classList.remove('nextContainer');\r\n            }\r\n        }\r\n        const fallElement = document.querySelectorAll('.activeContainer');\r\n        for (let item of fallElement) {\r\n            if(Number(item.innerText) < price) {\r\n                item.classList.add('inActiveContainer');\r\n                item.classList.remove('activeContainer');\r\n            }\r\n        }\r\n        // console.log(typeof domElement);\r\n        // const elem = domElement.filter(el =>\r\n        //     el.innerText !== String(price)\r\n        // );\r\n        // console.log(elem);\r\n    });\r\n    return data.map(el => {\r\n        return (\r\n            <div key={el.id} className=\"background nextContainer\">\r\n                {el.price}\r\n            </div>\r\n        )\r\n    }).reverse();\r\n};\r\nexport default Menu;","import React from 'react';\r\nimport '../../styles/Answers.css';\r\n\r\nconst Answers = (props) => {\r\n    return (\r\n        <div>\r\n            {props.data.map((el) => {\r\n                if(el.true) {\r\n                    return(\r\n                         <div\r\n                            className=\"button1\"\r\n                            key={el.id}\r\n                            onClick={()=>props.callback(el.true)}\r\n                         >{el.true}</div>\r\n                    )\r\n                } else {\r\n                    return(\r\n                        <div\r\n                            className=\"button1\"\r\n                            key={el.id}\r\n                            onClick={()=>props.callback(el.false)}\r\n                        >{el.false}</div>\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n};\r\nexport default Answers;","import React from 'react';\r\n\r\nconst Question = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>{props.data}</h1>\r\n        </div>\r\n    )\r\n};\r\nexport default Question;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport '../styles/GameOver.css';\r\n\r\nconst GameOver = ({price}) => {\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className=\"main\"\r\n        >\r\n            <div xs={12} md={6} className=\"hand\"/>\r\n            <div xs={12} md={6}>\r\n                <p className=\"score\">Total score:</p>\r\n                <p className=\"price\">${price} earned</p>\r\n                <div xs={12}>\r\n                    <Link to='/'>\r\n                        <button className='startBtn'>\r\n                            <p className='textBtn'>Try again</p>\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default GameOver;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*<div className=\"endContainer\">*/}\r\n{/*    <div className=\"hand\"/>*/}\r\n{/*    <div className=\"container\">*/}\r\n{/*    <span className=\"score\">Total score:</span>*/}\r\n{/*<span className=\"price\">${price} earned</span>*/}\r\n{/*<Link to='/'>*/}\r\n{/*<button className='startBtn'>*/}\r\n{/*<p className='textBtn'>Try again</p>*/}\r\n{/*</button>*/}\r\n{/*</Link>*/}\r\n{/*</div>*/}\r\n{/*</div>*/}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {gameOver, setIncrement, result} from \"../redux/actions\";\r\nimport Menu from \"./BoardComponents/Menu\";\r\nimport Answers from \"./BoardComponents/Answers\";\r\nimport Question from \"./BoardComponents/Question\";\r\nimport GameOver from \"./GameOver\";\r\nimport '../styles/Board.css';\r\n\r\nconst Board = ({\r\n   arrAnswers,\r\n   i,\r\n   setIncrement,\r\n   end,\r\n   gameOver,\r\n   result,\r\n   price\r\n}) => {\r\n    //if array is't empty else return Error page\r\n    if (arrAnswers.length > 0) {\r\n        const item = {\r\n            question: arrAnswers[i].question.title,\r\n            answ: arrAnswers[i].question.answers,\r\n            price: arrAnswers[i].price,\r\n            len: arrAnswers.length,\r\n            true: arrAnswers[i].question.answers.filter(el => el.true)[0].true\r\n        };\r\n        const renderPrice = [];\r\n        //getting answer in callback\r\n        const handleClickAnswer = (response) => {\r\n            if(response === item.true) {\r\n                setIncrement(++i);\r\n                result(item.price);\r\n\r\n                if(i === item.len) {\r\n                    result(item.price);\r\n                    setIncrement(i = 0);\r\n                    gameOver(true);\r\n                }\r\n            } else {\r\n                result(price);\r\n                gameOver(true);\r\n            }\r\n        };\r\n\r\n        //create array with answers for question and transfer on props component\r\n        if(end) {\r\n            return (\r\n                <GameOver price={price}/>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className='board'>\r\n                    <div className='question'>\r\n                        <Question\r\n                            data={item.question}\r\n                        />\r\n                    </div>\r\n                    <div className='answers'>\r\n                        <Answers\r\n                            data={item.answ}\r\n                            callback={handleClickAnswer}\r\n                        />\r\n                    </div>\r\n                    <div className='menu'>\r\n                        <Menu\r\n                            data={arrAnswers}\r\n                            price={price}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return <div>Error</div>\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        arrAnswers: state.data.questions,\r\n        i: state.data.iterator,\r\n        end: state.data.gameOver,\r\n        price: state.data.result\r\n    }\r\n};\r\nconst mapDispatchToProps = {\r\n    setIncrement,\r\n    gameOver,\r\n    result\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {gameOver, getConfig, result, setIncrement, setQuestions} from \"../redux/actions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Config from '../data/gameConfig';\r\nimport '../styles/MainPage.css';\r\n\r\n\r\nconst MainPage = ({\r\n              data,\r\n              setQuestions,\r\n              result,\r\n              gameOver,\r\n              getConfig,\r\n              setIncrement\r\n}) => {\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className=\"main\"\r\n        >\r\n            <div xs={12} md={6} className=\"img\">\r\n                {/*<img src=\"../assets/main/hand.svg\" alt=\"finger up\" className='img'/>*/}\r\n            </div>\r\n            <div xs={12} md={6}>\r\n                <span className='mainText'>Who wants to be a millionaire?</span>\r\n                <div xs={12}>\r\n                    <Link to='/Board'>\r\n                        <button\r\n                            className='startBtn'\r\n                            onClick={()=>{\r\n                                result(null);\r\n                                setIncrement(0);\r\n                                gameOver(false);\r\n                                getConfig(Config);\r\n                                setQuestions(data);\r\n                            }}\r\n                        >\r\n                            <p className='textBtn'>START</p>\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const data = state.data.data.data;\r\n    //filtered array, and got new array consist from 12 questions and get him in props (data);\r\n    const arr = data.reduce((bank, item) => bank.includes(item.price) ? bank : [...bank, item.price], []);\r\n    const filtered = (arr, value) => {\r\n        const filteredArr = arr.filter(el => el.price === value);\r\n        return filteredArr[Math.floor(Math.random() * filteredArr.length)];\r\n    };\r\n    const questionArr = [];\r\n    arr.map(el => questionArr.push(filtered(data, el)));\r\n\r\n    return {\r\n        data: questionArr\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    setQuestions,\r\n    result,\r\n    gameOver,\r\n    getConfig,\r\n    setIncrement\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <h1>Error</h1>\r\n        </div>\r\n    )\r\n};\r\nexport default Error;","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useRoutes } from './routes';\n\nfunction App() {\n    const routes = useRoutes();\n    return (\n        <Router basename=\"/millionaries-game\">\n            <Fragment>\n                {routes}\n            </Fragment>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport  Board from './components/Board'\r\nimport  GameOver from './components/GameOver'\r\nimport  MainPage from './components/Main'\r\nimport Error from \"./components/Error\";\r\n\r\nexport const useRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/' exact component={MainPage}>\r\n                <MainPage />\r\n            </Route>\r\n            <Route path=\"/Board\" component={Board}>\r\n                <Board />\r\n            </Route>\r\n            <Route path=\"/GameOver\" component={GameOver}>\r\n                <GameOver />\r\n            </Route>\r\n            <Route path=\"*\">\r\n                <Error />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n};","import {INCREMENT_ITERATOR, GAME_OVER, SET_QUESTIONS, RESULT, GET_CONFIG} from \"./types\";\r\nimport Data from '../data/gameConfig'\r\n\r\nconst initialState = {\r\n    data: Data,\r\n    questions: [],\r\n    iterator: 0,\r\n    gameOver: false,\r\n    result: 0\r\n};\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_CONFIG:\r\n            return {...state, data: action.payload};\r\n        case SET_QUESTIONS:\r\n            return Object.assign({},state, {\r\n                questions: action.payload,\r\n            });\r\n        case INCREMENT_ITERATOR:\r\n            return {...state, iterator: action.payload};\r\n        case GAME_OVER:\r\n            return {...state, gameOver: action.payload};\r\n        case RESULT:\r\n            return {...state, result: action.payload};\r\n        default: return state;\r\n    }\r\n};","import {combineReducers} from \"redux\";\r\nimport {dataReducer} from \"./dataReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    data: dataReducer\r\n});","import {compose, createStore} from \"redux\";\r\nimport {rootReducer} from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from \"./redux/store\";\nimport './index.css';\n\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}